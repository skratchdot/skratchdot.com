{"pageProps":{"posts":[{"year":"2009","month":"09","day":"23","slug":"cannot-insert-duplicate-key-row-in-object-xxx-with-unique-index-yyy","filename":"2009-09-23-cannot-insert-duplicate-key-row-in-object-xxx-with-unique-index-yyy.md","html":"<p>The other month I ran into an issue when trying to\nrun a simple update statement on a table in SQL Server 2005.\nThe error I was receiving was:</p>\n<p><strong>Cannot insert duplicate key row in object 'MyProductView' with unique index 'IXCL_MyProductView'</strong></p>\n<p><em>NOTE: I've changed the names of the views/tables/columns that were actually used, but you should get the idea.</em></p>\n<p>The update statement that threw the error looked like this:</p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">UPDATE</span> Products <span class=\"hljs-keyword\">SET</span> active <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">WHERE</span> id <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">200</span>\n</code></pre>\n<p><strong>MyProductView</strong> was basically just a way to join a few of\nthe product related tables (ie: <strong>Sizes</strong>, <strong>Colors</strong>, <strong>Inventory</strong>, etc).</p>\n<p>The index on <strong>MyProductView</strong> that was causing the constraint violation looked something like this:</p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">UNIQUE</span> CLUSTERED INDEX IXCL_MyProductView <span class=\"hljs-keyword\">ON</span> MyProductView\n(\n    product_id,\n    color_id,\n    size_id,\n    inventory_id,\n    currency_id\n}\n</code></pre>\n<p>Notice the <strong>active</strong> flag/column is not in the clustered\nindex (so updating that column on the <strong>Products</strong> table should\nnot change a row in my view that would violate the unique constraint\nabove). Also, the <strong>active</strong> column was not in any of the join\nclauses for the <strong>MyProductView</strong>, so no rows should've been added\nor deleted from the view after running the update statement.</p>\n<p>To confirm the validity of the <strong>IXCL_MyProductView</strong> constraint, I could run:</p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span>\n    product_id, color_id, size_id, inventory_id, currency_id, <span class=\"hljs-built_in\">COUNT</span>(<span class=\"hljs-number\">1</span>) <span class=\"hljs-keyword\">AS</span> confirmConstraint\n<span class=\"hljs-keyword\">FROM</span>\n    MyProductView\n<span class=\"hljs-keyword\">GROUP</span> <span class=\"hljs-keyword\">BY</span>\n    product_id, color_id, size_id, inventory_id, currency_id\n</code></pre>\n<p>As long as the <strong>IXCL_MyProductView</strong> constraint was in place,\nthe <strong>confirmConstraint</strong> column could only have a value of 1.</p>\n<p>I could not figure out why running:</p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">UPDATE</span> Products <span class=\"hljs-keyword\">SET</span> active <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">WHERE</span> id <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">200</span>\n</code></pre>\n<p>would cause a problem. If the query would complete successfully,\nthe constraint would still be valid. In fact, I could run the same\nquery in production just fine. Also, the other developers could run\nthe query just fine on their local DBs. I was the only one who was\nrunning into this constraint violation (and I had the same data in my\ndatabase as the other databases had). After bringing this up with our\nDBA, he had no idea why the constraint violation would be occur.\nI wondered if I needed to wrap the UPDATE statement in a TRANSACTION COMMIT\nblock, but our DBA said I shouldn't have to.</p>\n<p>After thinking about it for a minute, he asked what version of SQL Server 2005\nI was using. It turned out I was not running the same service pack level as the\nother developers (and what was in production).</p>\n<p>I was running <strong>\"SQL Server 2005 - Developer's Edition (9.0 RTM)\"</strong>. I then\nupgraded to Service Pack 2: <strong>\"SQL Server 2005 - Developer's Edition (9.0 SP2)\"</strong>,\nand the issue disappeared. I was able to run my UPDATE statement without error.</p>\n","frontmatter":{"layout":"post","title":"Cannot insert duplicate key row in object 'xxx' with unique index 'yyy'","categories":["SQL"],"tags":["Database","SQL","SQL Server 2005"],"type":"post","status":"publish"}}]},"__N_SSG":true}