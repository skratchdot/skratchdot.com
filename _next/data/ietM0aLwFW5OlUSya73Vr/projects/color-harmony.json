{"pageProps":{"slug":"/projects/color-harmony","filename":"_pages/projects/color-harmony/index.md","html":"<h1 id=\"color-harmony\">color-harmony</h1>\n<p><a href=\"http://badge.fury.io/js/color-harmony\" class=\"noBackground noBorder\"><img src=\"https://badge.fury.io/js/color-harmony.svg\" alt=\"NPM version\"></a>\n<a href=\"https://travis-ci.org/skratchdot/color-harmony\" class=\"noBackground noBorder\"><img src=\"https://travis-ci.org/skratchdot/color-harmony.png?branch=master\" alt=\"Build Status\"></a>\n<a href=\"https://codeclimate.com/github/skratchdot/color-harmony\" class=\"noBackground noBorder\"><img src=\"https://codeclimate.com/github/skratchdot/color-harmony.png\" alt=\"Code Climate\"></a>\n<a href=\"https://coveralls.io/r/skratchdot/color-harmony\" class=\"noBackground noBorder\"><img src=\"https://coveralls.io/repos/skratchdot/color-harmony/badge.png\" alt=\"Coverage Status\"></a>\n<a href=\"https://david-dm.org/skratchdot/color-harmony\" class=\"noBackground noBorder\"><img src=\"https://david-dm.org/skratchdot/color-harmony.svg\" alt=\"Dependency Status\"></a>\n<a href=\"https://david-dm.org/skratchdot/color-harmony#info=devDependencies\" class=\"noBackground noBorder\"><img src=\"https://david-dm.org/skratchdot/color-harmony/dev-status.svg\" alt=\"devDependency Status\"></a></p>\n<p><a href=\"https://npmjs.org/package/color-harmony\" class=\"noBackground noBorder\"><img src=\"https://nodei.co/npm/color-harmony.png\" alt=\"NPM\"></a></p>\n<h2 id=\"description\">Description</h2>\n<p>A javascript library that creates color scales/harmonies by rotating the hue of the given color.</p>\n<p>There are also helper methods to create shades (mixing w/ black), tints (mixing w/ white), and\ntones (mixing w/ middle gray).</p>\n<h2 id=\"getting-started\">Getting Started</h2>\n<p>Install the module with: <code>npm install color-harmony</code></p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">var</span> <span class=\"hljs-title class_\">Harmonizer</span> = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'color-harmony'</span>).<span class=\"hljs-property\">Harmonizer</span>;\n<span class=\"hljs-keyword\">var</span> harmonizer = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Harmonizer</span>();\nharmonizer.<span class=\"hljs-title function_\">harmonizeAll</span>(<span class=\"hljs-string\">'#c820f1'</span>); <span class=\"hljs-comment\">// returns a map of scales</span>\nharmonizer.<span class=\"hljs-title function_\">harmonize</span>(<span class=\"hljs-string\">'#000'</span>, <span class=\"hljs-string\">'complementary'</span>); <span class=\"hljs-comment\">// returns ['#000000', '#ffffff']</span>\n</code></pre>\n<h2 id=\"documentation\">Documentation</h2>\n<p>This library uses the <a href=\"https://github.com/One-com/one-color\">onecolor</a> parser,\nso colorString can in many different formats (i.e. #ff00cc, rgb(13,42,255), etc).</p>\n<h4 id=\"harmonizeraddharmonyname-degreearray\">harmonizer.add(harmonyName, degreeArray)</h4>\n<p>Add a new named harmony. If the harmony name already exists, it will\nbe overwritten. If degreeArray is not an array of numbers, then the\nharmony will not be added.</p>\n<h4 id=\"harmonizerharmonizeallcolorstring\">harmonizer.harmonizeAll(colorString)</h4>\n<p>Return a map of all the harmonies for the given color string.</p>\n<h4 id=\"harmonizerharmonizecolorstring-harmony\">harmonizer.harmonize(colorString, harmony)</h4>\n<p>Return an array of hex codes based on the given color string and harmony.</p>\n<p>The harmony argument can be a 'named harmony', or it can be a custom harmony\nby passing in an array of numbers (degrees 0-360).</p>\n<h4 id=\"harmonizershadescolorstring-size\">harmonizer.shades(colorString, size)</h4>\n<p>Return an array of hex codes container the shades of a given color (i.e. mix it with black - #000000).</p>\n<p>If size is not a valid number, then the array will default to a size of 10.</p>\n<h4 id=\"harmonizertintscolorstring-size\">harmonizer.tints(colorString, size)</h4>\n<p>Return an array of hex codes container the tints of a given color (i.e. mix it with white - #FFFFFF).</p>\n<p>If size is not a valid number, then the array will default to a size of 10.</p>\n<h4 id=\"harmonizertonescolorstring-size\">harmonizer.tones(colorString, size)</h4>\n<p>Return an array of hex codes container the tones of a given color (i.e. mix it with middle gray - #777777).</p>\n<p>If size is not a valid number, then the array will default to a size of 10.</p>\n<h3 id=\"available-harmony-names-and-their-associated-degrees-of-hue-rotation\">Available Harmony Names (and their associated degrees of hue rotation)</h3>\n<ul>\n<li>complementary: [0,180]</li>\n<li>splitComplementary: [0,150,320]</li>\n<li>splitComplementaryCW: [0,150,300]</li>\n<li>splitComplementaryCCW: [0,60,210]</li>\n<li>triadic: [0,120,240]</li>\n<li>clash: [0,90,270]</li>\n<li>tetradic: [0,90,180,270]</li>\n<li>fourToneCW: [0,60,180,240]</li>\n<li>fourToneCCW: [0,120,180,300]</li>\n<li>fiveToneA: [0,115,155,205,245]</li>\n<li>fiveToneB: [0,40,90,130,245]</li>\n<li>fiveToneC: [0,50,90,205,320]</li>\n<li>fiveToneD: [0,40,155,270,310]</li>\n<li>fiveToneE: [0,115,230,270,320]</li>\n<li>sixToneCW: [0,30,120,150,240,270]</li>\n<li>sixToneCCW: [0,90,120,210,240,330]</li>\n<li>neutral: [0,15,30,45,60,75]</li>\n<li>analogous: [0,30,60,90,120,150]</li>\n</ul>\n<p><strong>NOTE:</strong> This list was compiled based on the data in <a href=\"https://github.com/brehaut/color-js\">color-js</a></p>\n<h2 id=\"examples\">Examples</h2>\n<p>Get all the stored harmonies</p>\n<pre><code class=\"hljs language-javascript\">harmonizer.<span class=\"hljs-title function_\">harmonizeAll</span>(<span class=\"hljs-string\">'#c820f1'</span>); <span class=\"hljs-comment\">// returns a map of scales</span>\n</code></pre>\n<p>Get a named harmony</p>\n<pre><code class=\"hljs language-javascript\">harmonizer.<span class=\"hljs-title function_\">harmonize</span>(<span class=\"hljs-string\">'#000'</span>, <span class=\"hljs-string\">'complementary'</span>); <span class=\"hljs-comment\">// returns ['#000000', '#ffffff']</span>\n</code></pre>\n<p>Get a custom harmony</p>\n<pre><code class=\"hljs language-javascript\">harmonizer.<span class=\"hljs-title function_\">harmonize</span>(<span class=\"hljs-string\">'#000'</span>, [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">40</span>]); <span class=\"hljs-comment\">// returns an array of colors</span>\n</code></pre>\n<p>Add a custom harmony that can later be referenced by name</p>\n<pre><code class=\"hljs language-javascript\">harmonizer.<span class=\"hljs-title function_\">add</span>(<span class=\"hljs-string\">'foo'</span>, [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">25</span>, <span class=\"hljs-number\">45</span>]);\nharmonizer.<span class=\"hljs-title function_\">harmonize</span>(<span class=\"hljs-string\">'#00cc00'</span>, <span class=\"hljs-string\">'foo'</span>); <span class=\"hljs-comment\">// returns your custom data</span>\n</code></pre>\n<p>Return the shades of a given color (mix it with black - #000000)</p>\n<pre><code class=\"hljs language-javascript\">harmonizer.<span class=\"hljs-title function_\">shades</span>(<span class=\"hljs-string\">'#925719'</span>); <span class=\"hljs-comment\">// returns 10 by default</span>\nharmonizer.<span class=\"hljs-title function_\">shades</span>(<span class=\"hljs-string\">'#925719'</span>, <span class=\"hljs-number\">14</span>); <span class=\"hljs-comment\">// you can return a custom amount (an array of 14)</span>\n</code></pre>\n<p>Return the tints of a given color (mix it with white - #FFFFFF)</p>\n<pre><code class=\"hljs language-javascript\">harmonizer.<span class=\"hljs-title function_\">tints</span>(<span class=\"hljs-string\">'#925719'</span>); <span class=\"hljs-comment\">// returns 10 by default</span>\nharmonizer.<span class=\"hljs-title function_\">tints</span>(<span class=\"hljs-string\">'#925719'</span>, <span class=\"hljs-number\">14</span>); <span class=\"hljs-comment\">// you can return a custom amount (an array of 14)</span>\n</code></pre>\n<p>Return the tones of a given color (mix it with middle gray - #777777)</p>\n<pre><code class=\"hljs language-javascript\">harmonizer.<span class=\"hljs-title function_\">tones</span>(<span class=\"hljs-string\">'#925719'</span>); <span class=\"hljs-comment\">// returns 10 by default</span>\nharmonizer.<span class=\"hljs-title function_\">tones</span>(<span class=\"hljs-string\">'#925719'</span>, <span class=\"hljs-number\">14</span>); <span class=\"hljs-comment\">// you can return a custom amount (an array of 14)</span>\n</code></pre>\n<h2 id=\"release-history\">Release History</h2>\n<h4 id=\"v020---released-june-22-2014\">v0.2.0 - Released June 22, 2014</h4>\n<ul>\n<li>fixing a bug with the saturation value that was being used</li>\n</ul>\n<h4 id=\"v010---released-june-21-2014\">v0.1.0 - Released June 21, 2014</h4>\n<ul>\n<li>initial release</li>\n</ul>\n<h2 id=\"license\">License</h2>\n<p>Copyright (c) 2014 skratchdot<br>Licensed under the MIT license.</p>\n","frontmatter":{"layout":"page","title":"color-harmony"}},"__N_SSG":true}