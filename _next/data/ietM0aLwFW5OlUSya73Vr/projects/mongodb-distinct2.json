{"pageProps":{"slug":"/projects/mongodb-distinct2","filename":"_pages/projects/mongodb-distinct2/index.md","html":"<h1 id=\"mongodb---distinct2js\">MongoDB - distinct2.js</h1>\n<p><a href=\"https://www.skratchdot.com/projects/mongodb-distinct2/\">Project Page</a><br><a href=\"https://github.com/skratchdot/mongodb-distinct2/\">Source Code</a><br><a href=\"https://github.com/skratchdot/mongodb-distinct2/issues/\">Issues</a></p>\n<h2 id=\"description\">Description:</h2>\n<p>Similar to the db.myCollection.distinct() function, distinct2() allows\nyou to pass in an array of keys to get values for. It also allows you\nto pass in an optional \"count\" argument. When true, you can easily get\nthe counts for your distinct values.</p>\n<p>You can also call distinct2() on the results of a query (something you\ncan't currently do with the built in distinct() function).</p>\n<p>To accomplish this, it adds the following functions to our built in mongo prototypes:</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-title class_\">DBCollection</span>.<span class=\"hljs-property\"><span class=\"hljs-keyword\">prototype</span></span>.<span class=\"hljs-property\">distinct2</span> = <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">keys, count</span>) {};\n<span class=\"hljs-title class_\">DBQuery</span>.<span class=\"hljs-property\"><span class=\"hljs-keyword\">prototype</span></span>.<span class=\"hljs-property\">distinct2</span> = <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">keys, count</span>) {};\n</code></pre>\n<h2 id=\"usage\">Usage:</h2>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-comment\">// All 5 of these statements are the same as:</span>\n<span class=\"hljs-comment\">//</span>\n<span class=\"hljs-comment\">//     db.users.distinct('name.first')</span>\n<span class=\"hljs-comment\">//</span>\ndb.<span class=\"hljs-property\">users</span>.<span class=\"hljs-title function_\">distinct2</span>(<span class=\"hljs-string\">'name.first'</span>);\ndb.<span class=\"hljs-property\">users</span>.<span class=\"hljs-title function_\">distinct2</span>(<span class=\"hljs-string\">'name.first'</span>, <span class=\"hljs-literal\">false</span>);\ndb.<span class=\"hljs-property\">users</span>.<span class=\"hljs-title function_\">distinct2</span>([<span class=\"hljs-string\">'name.first'</span>]);\ndb.<span class=\"hljs-property\">users</span>.<span class=\"hljs-title function_\">distinct2</span>([<span class=\"hljs-string\">'name.first'</span>], <span class=\"hljs-literal\">false</span>);\ndb.<span class=\"hljs-property\">users</span>.<span class=\"hljs-title function_\">find</span>().<span class=\"hljs-title function_\">distinct2</span>(<span class=\"hljs-string\">'name.first'</span>);\n\n<span class=\"hljs-comment\">// you can pass in an array of values</span>\ndb.<span class=\"hljs-property\">users</span>.<span class=\"hljs-title function_\">distinct2</span>([<span class=\"hljs-string\">'name.first'</span>, <span class=\"hljs-string\">'name.last'</span>]);\n\n<span class=\"hljs-comment\">// you can get counts</span>\ndb.<span class=\"hljs-property\">users</span>.<span class=\"hljs-title function_\">distinct2</span>(<span class=\"hljs-string\">'name.first'</span>, <span class=\"hljs-literal\">true</span>);\n\n<span class=\"hljs-comment\">// you can get distinct values from the results of a query</span>\ndb.<span class=\"hljs-property\">users</span>.<span class=\"hljs-title function_\">find</span>({ <span class=\"hljs-string\">'name.first'</span>: <span class=\"hljs-string\">'Bob'</span> }).<span class=\"hljs-title function_\">distinct2</span>(<span class=\"hljs-string\">'name.last'</span>);\n\n<span class=\"hljs-comment\">//</span>\n<span class=\"hljs-comment\">// When calling distinct2() on large datasets, status on the operation</span>\n<span class=\"hljs-comment\">// will be printed to the shell. By default, the status interval is 1000ms.</span>\n<span class=\"hljs-comment\">// If you would like more/less frequent updates, you can pass in an interval</span>\n<span class=\"hljs-comment\">// time to a setStatusInterval() function. If you would like to disable</span>\n<span class=\"hljs-comment\">// status updates, you can pass in a negative number.</span>\n<span class=\"hljs-comment\">//</span>\n\n<span class=\"hljs-comment\">// Print status updates every 5 seconds:</span>\ndb.<span class=\"hljs-property\">users</span>.<span class=\"hljs-property\">distinct2</span>.<span class=\"hljs-title function_\">setStatusInterval</span>(<span class=\"hljs-number\">5000</span>);\n\n<span class=\"hljs-comment\">// Disable status updates</span>\ndb.<span class=\"hljs-property\">users</span>.<span class=\"hljs-property\">distinct2</span>.<span class=\"hljs-title function_\">setStatusInterval</span>(<span class=\"hljs-number\">0</span>);\n\n<span class=\"hljs-comment\">// distinct2 can be used like group(), but has a simpler syntax.</span>\n<span class=\"hljs-comment\">// Take for instance the following 2 queries (which return the same</span>\n<span class=\"hljs-comment\">// results- but in a slightly different format). Let's say the users</span>\n<span class=\"hljs-comment\">// collection has 37 documents. All users have a first name of either</span>\n<span class=\"hljs-comment\">// 'Bob' or 'Amy'. Compare these 2 queries (and results):</span>\n\n<span class=\"hljs-comment\">// query 1</span>\ndb.<span class=\"hljs-property\">users</span>.<span class=\"hljs-title function_\">distinct2</span>(<span class=\"hljs-string\">'name.first'</span>, <span class=\"hljs-literal\">true</span>);\n<span class=\"hljs-comment\">// result 1</span>\n[\n  [<span class=\"hljs-string\">'Bob'</span>, <span class=\"hljs-number\">22</span>],\n  [<span class=\"hljs-string\">'Amy'</span>, <span class=\"hljs-number\">15</span>],\n];\n\n<span class=\"hljs-comment\">// query 2</span>\ndb.<span class=\"hljs-property\">users</span>.<span class=\"hljs-title function_\">group</span>({\n  <span class=\"hljs-attr\">key</span>: { <span class=\"hljs-string\">'name.first'</span>: <span class=\"hljs-number\">1</span> },\n  <span class=\"hljs-attr\">$reduce</span>: <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">curr, result</span>) {\n    result.<span class=\"hljs-property\">total</span>++;\n  },\n  <span class=\"hljs-attr\">initial</span>: { <span class=\"hljs-attr\">total</span>: <span class=\"hljs-number\">0</span> },\n});\n<span class=\"hljs-comment\">// result 2</span>\n[\n  { <span class=\"hljs-string\">'first.name'</span>: <span class=\"hljs-string\">'Bob'</span>, <span class=\"hljs-attr\">total</span>: <span class=\"hljs-number\">22</span> },\n  { <span class=\"hljs-string\">'first.name'</span>: <span class=\"hljs-string\">'Amy'</span>, <span class=\"hljs-attr\">total</span>: <span class=\"hljs-number\">15</span> },\n];\n</code></pre>\n<h2 id=\"installation\">Installation:</h2>\n<p>Download: <a href=\"https://github.com/skratchdot/mongodb-distinct2/raw/master/distinct2.js\">distinct2.js</a></p>\n<h3 id=\"option-1\">Option 1</h3>\n<p>Add this script to your .mongorc.js file.</p>\n<p>See: <a href=\"http://www.mongodb.org/display/DOCS/Overview+-+The+MongoDB+Interactive+Shell#Overview-TheMongoDBInteractiveShell-.mongorc.js\">http://www.mongodb.org/display/DOCS/Overview+-+The+MongoDB+Interactive+Shell#Overview-TheMongoDBInteractiveShell-.mongorc.js</a></p>\n<h3 id=\"option-2\">Option 2</h3>\n<p>Start the shell after executing this script</p>\n<pre><code class=\"hljs language-plaintext\">mongo --shell distinct2.js\n</code></pre>\n<h3 id=\"disclaimer\">Disclaimer</h3>\n<p>This is not a highly efficient function. Use caution when running this on large\ncollections. It works great on smaller datasets, but may be unusable on huge\ncollections. There is a status line that will be printed every 1000ms. You can always\nctrl-c if it takes too long.</p>\n","frontmatter":{"layout":"page","title":"MongoDB - distinct2.js"}},"__N_SSG":true}