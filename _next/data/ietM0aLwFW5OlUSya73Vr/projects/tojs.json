{"pageProps":{"slug":"/projects/tojs","filename":"_pages/projects/tojs/index.md","html":"<h1 id=\"tojs\">tojs</h1>\n<h2 id=\"description\">Description</h2>\n<p><strong>tojs</strong> lets you convert files between plain text, javascript strings,\nand document.write() statements.</p>\n<p>It's original purpose, was to read in an .html file, and output it\nas a series of document.write() statements. This is useful when creating\nbookmarklets. You can code your .html page, then run <strong>tojs</strong> on it.\nNow all your bookmarklet has to do is include a script tag that points\nto the file you created with <strong>tojs</strong>.</p>\n<p>Since version 1.2.0, <strong>tojs</strong> was converted to a node.js project, and now\nsupports a few different input/output formats. To see the new options,\ncheck out the <strong>Usage</strong> and <strong>Options</strong> sections below.</p>\n<h2 id=\"usage\">Usage</h2>\n<pre><code class=\"hljs language-plaintext\">tojs [options] &lt;files&gt;\n</code></pre>\n<h2 id=\"options\">Options</h2>\n<pre><code class=\"hljs language-plaintext\">-h, --help           output usage information\n-v, --version        output the version number\n-i, --input [type]   The type of input [plain|js|jsvar|docwrite]\n-o, --output [type]  The type of input [plain|js|jsvar|docwrite]\n-n, --name [name]    If output is \"jsvar\", this is the variable name\n--oneline            Force output to be on one line only\n--single-quotes      Use single-quotes instead of double-quotes for output\n--no-var             var keyword will not be included in output\n--no-open            document.open() will not be included in output\n--no-close           document.close() will not be included in output\n</code></pre>\n<h2 id=\"examples\">Examples</h2>\n<pre><code class=\"hljs language-plaintext\">$ tojs one.txt two.txt three.txt\n$ tojs -o \"docwrite\" file.html &gt; file.html.js\n$ tojs -i \"docwrite\" -o \"plain\" file.html.js &gt; file.html\n$ tojs -o \"jsvar\" --oneline --name \"myVariable\" file.txt\n$ echo -e \"one\\ntwo\\nthree\" | tojs\n</code></pre>\n<h2 id=\"installation\">Installation</h2>\n<pre><code class=\"hljs language-plaintext\">npm install -g tojs\n</code></pre>\n<h2 id=\"links\">Links</h2>\n<p><a href=\"https://www.skratchdot.com/projects/tojs/\">Project Page</a></p>\n<p><a href=\"https://github.com/skratchdot/tojs/\">Github Page</a></p>\n<h2 id=\"version-history\">Version History</h2>\n<h3 id=\"v122-released-october-3-2013\">v1.2.2 (Released October 3, 2013)</h3>\n<ul>\n<li>fixed \"main\" declaration in package.json so library can be used from node\napps (patch submitted by <a href=\"https://github.com/ryanramage\">ryanramage</a>)</li>\n</ul>\n<h3 id=\"v121-released-january-2-2012\">v1.2.1 (Released January 2, 2012)</h3>\n<ul>\n<li>adding man page</li>\n</ul>\n<h3 id=\"v120-released-december-27-2012\">v1.2.0 (Released December 27, 2012)</h3>\n<ul>\n<li><p>converting to a node.js project so installation instructions have changed</p>\n</li>\n<li><p>command line options have changed</p>\n</li>\n<li><p>now supports the following input/output types:</p>\n<ul>\n<li><p>plain</p>\n</li>\n<li><p>js</p>\n</li>\n<li><p>jsvar</p>\n</li>\n<li><p>docwrite</p>\n</li>\n</ul>\n</li>\n<li><p>can now pipe data from stdin or use a list of files as input (similar to the unix cat command)</p>\n</li>\n</ul>\n<h3 id=\"v110-released-november-5-2012\">v1.1.0 (Released November 5, 2012)</h3>\n<ul>\n<li><p>fixing formatting of help text</p>\n</li>\n<li><p>adding 2 new command line options</p>\n<ul>\n<li><p><strong>-o</strong> | <strong>--no-open</strong> -- don't print the document.open() statement</p>\n</li>\n<li><p><strong>-c</strong> | <strong>--no-close</strong> -- don't print the document.close() statement</p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"v100-released-november-4-2012\">v1.0.0 (Released November 4, 2012)</h3>\n<ul>\n<li>Initial Release</li>\n</ul>\n","frontmatter":{"layout":"page","title":"tojs"}},"__N_SSG":true}