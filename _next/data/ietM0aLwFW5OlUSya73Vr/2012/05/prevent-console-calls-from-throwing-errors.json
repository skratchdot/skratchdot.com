{"pageProps":{"post":{"year":"2012","month":"05","day":"30","slug":"prevent-console-calls-from-throwing-errors","filename":"2012-05-30-prevent-console-calls-from-throwing-errors.md","html":"<p>If you try to use <strong>window.console</strong> calls in older browsers, an error will be thrown.</p>\n<p>There are a few ways to get around this. One way is to use a\n<a href=\"http://www.calormen.com/polyfill/#console\">console polyfill</a>. Another way is to\nuse a <a href=\"http://benalman.com/projects/javascript-debug-console-log/\">console wrapper</a>.\nYet one additional way is by creating empty functions for all the available\n<strong>window.console</strong> calls.</p>\n<p>This blog post provides some code to achieve the third method listed above. The code\nfirst ensures that <strong>window.console</strong> exists. It then ensures that all functions in\nthe <a href=\"http://getfirebug.com/wiki/index.php/Console_API\">Firebug Console API</a>\nexist in the <strong>window.console</strong> object. We default to an empty function so older browsers\ndon't throw errors. If a given <strong>window.console</strong> function already exists, we will use the\ndefault browser behavior.</p>\n<h3 id=\"un-minified-version\">Un-Minified Version:</h3>\n<!-- prettier-ignore-start -->\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">/*jslint browser: true, plusplus: true */</span>\n(<span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"><span class=\"hljs-variable language_\">window</span></span>) {\n    <span class=\"hljs-string\">'use strict'</span>;\n\n    <span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>,\n        emptyFunction = <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) {},\n        functionNames = [\n            <span class=\"hljs-string\">'assert'</span>, <span class=\"hljs-string\">'clear'</span>, <span class=\"hljs-string\">'count'</span>, <span class=\"hljs-string\">'debug'</span>, <span class=\"hljs-string\">'dir'</span>,\n            <span class=\"hljs-string\">'dirxml'</span>, <span class=\"hljs-string\">'error'</span>, <span class=\"hljs-string\">'exception'</span>, <span class=\"hljs-string\">'group'</span>, <span class=\"hljs-string\">'groupCollapsed'</span>,\n            <span class=\"hljs-string\">'groupEnd'</span>, <span class=\"hljs-string\">'info'</span>, <span class=\"hljs-string\">'log'</span>, <span class=\"hljs-string\">'profile'</span>, <span class=\"hljs-string\">'profileEnd'</span>, <span class=\"hljs-string\">'table'</span>,\n            <span class=\"hljs-string\">'time'</span>, <span class=\"hljs-string\">'timeEnd'</span>, <span class=\"hljs-string\">'timeStamp'</span>, <span class=\"hljs-string\">'trace'</span>, <span class=\"hljs-string\">'warn'</span>\n        ];\n\n    <span class=\"hljs-comment\">// Make sure window.console exists</span>\n    <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">console</span> = <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">console</span> || {};\n\n    <span class=\"hljs-comment\">// Make sure all functions exist</span>\n    <span class=\"hljs-keyword\">for</span> (i = <span class=\"hljs-number\">0</span>; i &lt; functionNames.<span class=\"hljs-property\">length</span>; i++) {\n        <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">console</span>[functionNames[i]] = <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">console</span>[functionNames[i]] || emptyFunction;\n    }\n\n}(<span class=\"hljs-variable language_\">window</span>));\n</code></pre>\n<!-- prettier-ignore-end -->\n\n<h3 id=\"minified-version\">Minified Version:</h3>\n<!-- prettier-ignore-start -->\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">/* https://www.skratchdot.com/2012/05/prevent-console-calls-from-throwing-errors/ */</span>\n(<span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">b</span>){<span class=\"hljs-keyword\">var</span> a=<span class=\"hljs-number\">0</span>,c=<span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>){},d=[<span class=\"hljs-string\">\"assert\"</span>,<span class=\"hljs-string\">\"clear\"</span>,<span class=\"hljs-string\">\"count\"</span>,<span class=\"hljs-string\">\"debug\"</span>,<span class=\"hljs-string\">\"dir\"</span>,<span class=\"hljs-string\">\"dirxml\"</span>,<span class=\"hljs-string\">\"error\"</span>,<span class=\"hljs-string\">\"exception\"</span>,<span class=\"hljs-string\">\"group\"</span>,<span class=\"hljs-string\">\"groupCollapsed\"</span>,<span class=\"hljs-string\">\"groupEnd\"</span>,<span class=\"hljs-string\">\"info\"</span>,<span class=\"hljs-string\">\"log\"</span>,<span class=\"hljs-string\">\"profile\"</span>,<span class=\"hljs-string\">\"profileEnd\"</span>,<span class=\"hljs-string\">\"table\"</span>,<span class=\"hljs-string\">\"time\"</span>,<span class=\"hljs-string\">\"timeEnd\"</span>,<span class=\"hljs-string\">\"timeStamp\"</span>,<span class=\"hljs-string\">\"trace\"</span>,<span class=\"hljs-string\">\"warn\"</span>];b.<span class=\"hljs-property\">console</span>=b.<span class=\"hljs-property\">console</span>||{};<span class=\"hljs-keyword\">for</span>(a=<span class=\"hljs-number\">0</span>;a&lt;d.<span class=\"hljs-property\">length</span>;a++){b.<span class=\"hljs-property\">console</span>[d[a]]=b.<span class=\"hljs-property\">console</span>[d[a]]||c}}(<span class=\"hljs-variable language_\">window</span>));\n</code></pre>\n<!-- prettier-ignore-end -->\n","frontmatter":{"layout":"post","title":"Prevent console calls from throwing errors","categories":["Javascript"],"tags":["Javascript","console"]}},"previousTitle":"Ubuntu Dual Boot - Change Default OS","previousUrl":"/2012/05/ubuntu-dual-boot-change-default-os","nextTitle":"Open Electribe Editor - v1.0.4 Released","nextUrl":"/2012/06/open-electribe-editor-v1-0-4-released"},"__N_SSG":true}