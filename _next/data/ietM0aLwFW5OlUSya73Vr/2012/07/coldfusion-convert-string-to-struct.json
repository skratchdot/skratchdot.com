{"pageProps":{"post":{"year":"2012","month":"07","day":"15","slug":"coldfusion-convert-string-to-struct","filename":"2012-07-15-coldfusion-convert-string-to-struct.md","html":"<p>The other day I had the need to create a nested structure\nbased off of a key using dot notation.</p>\n<p>Below is the function I came up with:</p>\n<pre><code class=\"hljs language-cfm\">&lt;cfscript&gt;\n\nprivate struct function convertStringToStruct(required string key, required any value, string delimiter = \".\") {\n    var obj = StructNew();\n    var first = ListFirst(arguments.key, arguments.delimiter);\n    var rest = ListRest(arguments.key, arguments.delimiter);\n\n    if (Len(rest)) {\n        obj[first] = convertStringToStruct(rest, arguments.value, arguments.delimiter);\n    } else {\n        obj[first] = arguments.value;\n    }\n\n    return obj;\n}\n\n&lt;/cfscript&gt;\n</code></pre>\n<p>Here's a quick example usage:</p>\n<pre><code class=\"hljs language-cfm\">&lt;cfscript&gt;\n\n    // Declare a struct. We will later append to this\n    obj = StructNew();\n\n    // Create a few top level keys\n    obj[\"ab\"] = \"foo\";\n    obj[\"b\"] = \"bar\";\n\n    // Append a dynamically created structure\n    StructAppend(obj, convertStringToStruct(\"a.b.c\", \"baz\"), false);\n\n    // Show our output\n    WriteDump(obj);\n\n&lt;/cfscript&gt;\n</code></pre>\n<p>The output from the above example:</p>\n<p><img src=\"/images/posts/2012/07/15/cfdump.png\" alt=\"cfdump output of convertStringToStruct() example\"></p>\n<p>Here is a gist containing the code:</p>\n<p><a href=\"https://gist.github.com/3118727\">https://gist.github.com/3118727</a></p>\n","frontmatter":{"layout":"post","title":"Coldfusion: Convert String To Struct","published":true,"categories":["ColdFusion"],"tags":["ColdFusion"]}},"previousTitle":"OSX Screenshot With Border From Command Line","previousUrl":"/2012/07/osx-screenshot-with-border-from-command-line","nextTitle":"mesh: the MongoDB Extended Shell","nextUrl":"/2012/07/mesh-the-mongodb-extended-shell"},"__N_SSG":true}